name: test-build-deploy
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


env:
  DOCKER_REPO_FRONT: "dotnet-angular-social-front"
  DOCKER_REPO_BACK_API: "dotnet-angular-social-back-api"
  DOCKER_REPO_BACK_CHAT: "dotnet-angular-social-back-chat"
  DOCKER_REPO_BACK_NOTIFICATION: "dotnet-angular-social-back-notification"
  DOCKER_TAG: "latest"

jobs: 
  build_deploy_to_docker:
    name: Build-and-deploy-to-docker-hub
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: docker login
      env:
        DOCKER_USER: ${{secrets.DOCKER_USER}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
   
    - name: Build backend Api the Docker iamge 
      run: docker build . --file backend/api/Dockerfile --tag  ${{secrets.DOCKER_USER}}/$DOCKER_REPO_BACK_API:$DOCKER_TAG
    - name: Docker Push 
      run: docker push ${{secrets.DOCKER_USER}}/$DOCKER_REPO_BACK_API:$DOCKER_TAG


   
    - name: Build backend Chat the Docker iamge 
      run: docker build . --file backend/realTimeChat/Dockerfile --tag  ${{secrets.DOCKER_USER}}/$DOCKER_REPO_BACK_CHAT:$DOCKER_TAG
    - name: Docker Push 
      run: docker push ${{secrets.DOCKER_USER}}/$DOCKER_REPO_BACK_CHAT:$DOCKER_TAG


   
    - name: Build backend Notification the Docker iamge 
      run: docker build . --file backend/realTimeNotification/Dockerfile --tag  ${{secrets.DOCKER_USER}}/$DOCKER_REPO_BACK_NOTIFICATION:$DOCKER_TAG
    - name: Docker Push 
      run: docker push ${{secrets.DOCKER_USER}}/$DOCKER_REPO_BACK_NOTIFICATION:$DOCKER_TAG


    - name: Build frontend the Docker iamge 
      run: docker build . --file client/Dockerfile --tag  ${{secrets.DOCKER_USER}}/$DOCKER_REPO_FRONT:$DOCKER_TAG
    - name: Docker Push 
      run: docker push ${{secrets.DOCKER_USER}}/$DOCKER_REPO_FRONT:$DOCKER_TAG
 
  # build-deploy-To-digital-Ociean:
  #   runs-on: ubuntu-latest
  #   needs: build_deploy_to_docker
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: executing remote ssh commands using ssh key
  #     uses: appleboy/ssh-action@v0.1.10
  #     with:
  #           host: 138.68.86.71
  #           username: root
  #           key: ${{ secrets.SSH_KEY }}
  #           script: |
  #             docker-compose down 
  #             docker rmi $(docker images -a -q) 
  #             docker-compose up -d